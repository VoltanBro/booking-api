name: rails
on: [push]

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3
          bundler-cache: true
      - run: bundle exec lefthook run pre-commit
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: booking_api_test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 3

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - name: Set up Ruby 2.7.3
        uses: ruby/setup-ruby@master

      - name: Cache Ruby Gems
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-gems-v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-gems-${{ hashFiles('**/.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-gems-${{ hashFiles('**/.ruby-version') }}-
            ${{ runner.os }}-${{ env.cache-name }}-gems-
            ${{ runner.os }}-
      - name: Install PostgreSQL client
        run: sudo apt-get install libpq-dev

      - name: Set link libffi
        run: sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6

      - name: Bundle Install
        run: bundle install --path vendor/bundle --jobs 4 --retry 3

      - name: Bundler Version
        run: bundle -v

      - name: Setup database
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.MASTER_KEY }}
        run: bundle exec rails db:drop db:create db:migrate

      - name: Set up Node 14.13.0
        uses: actions/setup-node@v1
        with:
          node-version: 14.13.0

      - name: Set up yarn version 1.22.5
        run: yarn policies set-version 1.22.5

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Node packages
        run: yarn
      - name: Run Rails tests
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.MASTER_KEY }}
        run: bundle exec rspec
